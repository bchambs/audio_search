Template used for project structure rework in August.

./audiosearch
    ./cache
        client.py
            class RedisClient()
                def fetch(key, hit=None, miss=None)
                def store(key, data, ttl=None)
    ./handlers  (closure outer = set local key, local ttl, **kwargs)
        refresh.py (inner = cache.expire(ttl))
        call_api.py (iner = tasks.[get_resource].delay())
    ./middleware
        preprocess.py
            class Normalizer()
    ./resources
        base.py
        artist.py
        playlist.py
        song.py
        search.py
        top.py
    ./services
        consumer.py
        base.py
            class EchoNestBase()
            base error(Exception)
            errors
        artistService.py
            class profile
            class similar
            class songs
        dependency.py
            class dependency
        playlistService.py
            class artist
            class songs
        songService.py
            class profile
        searchService.py
            class Song
            class Artist
        topService.py
            class artists
    ./tasks
        [celery.py]
        [tasks.py]
    ./templatetags
    messages.py
    key_pool.py
    settings.py
    urls.py
    views.py
    wsg.py



./cfg
    celerybeat.py
    celeryd.py
    redis.conf
./doc
./logs
./static
./templates


